package com.example.springboot.accounting.repository;

import java.util.Date;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.example.springboot.accounting.model.entities.ExploitationExpense;
import com.example.springboot.accounting.model.entities.Transaction;

public interface ExploitationExpenseRepository extends JpaRepository<ExploitationExpense, Long>{

	ExploitationExpense findByTransaction(Transaction transaction);
	@Query("SELECT e " + "FROM Expense e "
			+ "WHERE e.date BETWEEN :startDate AND :endDate  ORDER BY e.date ASC")
	List<ExploitationExpense> findAllBetween(@Param("startDate") Date start, @Param("endDate") Date stop);

	
	List<ExploitationExpense> findAllByDescription(String comment);
	
	@Query("SELECT e FROM ExploitationExpense e WHERE e.description LIKE %:comment%")
	List<ExploitationExpense> findAllLikeDescription(@Param("comment") String comment);
	
	@Query(value="SELECT * FROM Exploitation_Expense e INNER JOIN Expense ex ON e.id = ex.id WHERE ex.payee LIKE %:name%", nativeQuery = true)
	List<ExploitationExpense> findAllByPayee(@Param("name") String name);
}
